#!/usr/bin/env python
#
#
# $Id$
# $Author$
# $Date$
#
# Original author Rob Kutschke.
#

import os, re
Import('env')

Import('mu2e_helper')

helper=mu2e_helper()

#
# 1) When I rm lib/libG4_plugin.so and then scons, it also rebuilds
#    lib/libMu2eG4.so.  Why?
# 2) Construct G4GRANULARLIBS using shell() on the g4 command that makes
#    the granular lib string.
#

g4inc    = os.environ['G4INCLUDE'] + '/Geant4'
g4futureinc = '../inc'
g4libdir = os.environ['G4LIBDIR']
g4_version = os.environ['GEANT4_VERSION']
g4_version=g4_version.replace('_','')
g4_version = g4_version[1:4]

# Compiler switches needed by the default G4 build.
G4CPPFLAGS = [ '-DG4OPTIMISE',           '-DG4VERBOSE',
               '-DG4_STORE_TRAJECTORY',  '-DG4UI_USE_TCSH ',
               '-DG4UI_USE',             '-DG4VIS_USE_DAWNFILE',
               '-DG4VIS_USE_HEPREPFILE', '-DG4VIS_USE_RAYTRACER',
               '-DG4VIS_USE_VRMLFILE',   '-DG4VIS_USE_ASCIITREE',
               '-DG4VIS_USE_GAGTREE',    '-DG4VIS_USE',
               '-DG4VERSION='+g4_version
            ]

# Compiler switches if we want to build G4 with OPENGL
G4OGL_CPPFLAGS = [ '-DG4VIS_USE_OPENGLX',    '-DG4VIS_USE_OPENGL' ]

# The granular version of the G4 libraries.
G4GRANULARLIBS = [
           'G4error_propagation',                 'G4mctruth',
           'G4readout',                           'G4phys_lists',
           'G3toG4',                              'G4phys_builders',
           'G4gflash',                            'G4visHepRep',
           'G4biasing',                           'G4FR',
           'G4OpenGL',                            'G4RayTracer',
           'G4brep',                              'G4Tree',
           'G4VRML',                              'G4visXXX',
           'G4vis_management',                    'G4decay',
           'G4muons',                             'G4geomBoolean',
           'G4UIbasic',                           'G4UIGAG',
           'G4UIcommon',                          'G4emhighenergy',
           'G4empolar',                           'G4emstandard',
           'G4hadronic_binary',                   'G4xrays',
           'G4hadronic_coherent_elastic',         'G4hadronic_abrasion',
           'G4hadronic_em_dissociation',          'G4partutils',
           'G4had_lll_fis',                       'G4had_theo_max',
           'G4run',                               'G4hadronic_bert_cascade',
           'G4hadronic_hetcpp_evaporation',       'G4hadronic_ablation',
           'G4had_preequ_exciton',                'G4hadronic_incl_cascade',
           'G4hadronic_qmd',                      'G4hadronic_stop',
           'G4hadronic_interface_ci',             'G4hadronic_hetcpp_utils',
           'G4hadronic_deex_handler',             'G4hadronic_iso',
           'G4had_neu_hp',                        'G4hadronic_deex_evaporation',
           'G4hadronic_radioactivedecay',         'G4hadronic_deex_gem_evaporation',
           'G4had_string_diff',                   'G4hadronic_proc',
           'G4had_muon_nuclear',                  'G4hadronic_deex_photon_evaporation',
           'G4emlowenergy',                       'G4hadronic_mgt',
           'G4scoring',
           'G4optical',                           'G4hadronic_deex_fission',
           'G4detutils',                          'G4hadronic_deex_fermi_breakup',
           'G4parameterisation',                  'G4had_string_frag',
           'G4hadronic_HE',                       'G4geomdivision',
           'G4hadronic_qgstring',                 'G4had_string_man',
           'G4had_im_r_matrix',                   'G4hadronic_deex_management',
           'G4hadronic_LE',                       'G4hadronic_body_ci',
           'G4hadronic_RPG',                      'G4hadronic_deex_util',
           'G4shortlived',                        'G4hadronic_xsect',
           'G4hadronic_deex_multifragmentation',  'G4had_mod_util',
           'G4detscorer',                         'G4had_mod_man',
           'G4hadronic_util',                     'G4transportation',
           'G4mesons',                            'G4modeling',
           'G4event',                             'G4geombias',
           'G4tracking',                          'G4emutils',
           'G4baryons',                           'G4bosons',
           'G4leptons',                           'G4ions',
           'G4cuts',                              'G4detector',
           'G4specsolids',                        'G4hits',
           'G4digits',                            'G4csg',
           'G4hepnumerics',                       'G4navigation',
           'G4procman',                           'G4volumes',
           'G4track',                             'G4magneticfield',
           'G4partman',                           'G4geometrymng',
           'G4materials',                         'G4graphics_reps',
           'G4intercoms',                         'G4globman'
          ,'G4emadjoint',                         'G4partadj',
           'G4gl2ps',
           'G4GMocren',
           'G4hadronic_crosec_ci',
           'G4hadronic_fragm_ci',
           'G4hadronic_proc_ci',
           'G4gdml'
           ]

# geant4 9.5 and above uses G4GLOBALIBS
G4GLOBALIBS = [
              'libG4analysis',
              'libG4digits_hits',
              'libG4error_propagation',
              'libG4event',
              'libG4FR',
              'libG4geometry',
              'libG4gl2ps',
              'libG4global',
              'libG4GMocren',
              'libG4graphics_reps',
              'libG4intercoms',
              'libG4interfaces',
              'libG4materials',
              'libG4modeling',
              'libG4OpenGL',
              'libG4parmodels',
              'libG4particles',
              'libG4persistency',
              'libG4physicslists',
              'libG4processes',
              'libG4RayTracer',
              'libG4readout',
              'libG4run',
              'libG4track',
              'libG4tracking',
              'libG4Tree',
              'libG4visHepRep',
              'libG4vis_management',
              'libG4visXXX',
              'libG4VRML',
              'libG4zlib'
              ]

if g4_version < '495':
    G4LIBS = G4GRANULARLIBS
else:
    G4LIBS = G4GLOBALIBS

# Link libraries needed to build G4 with OPENGL.
OPENGL_LIBS = [ 'GLU', 'GL' ]

# Link libraries needed to build G4 with XERCESC
XERCESC_LIBS = [ 'xerces-c' ]

mylibs = [ 'art_Framework_Core',
           'art_Framework_Modules_RandomNumberSaver_module',
           'art_Framework_Services_Optional_TFileService_service',
           'mu2e_Analyses',
           'mu2e_GeometryService',
           'mu2e_ConditionsService',
           'mu2e_SeedService_SeedService_service',
           'mu2e_G4Helper_G4Helper_service',
           'mu2e_Mu2eUtilities',
           'mu2e_MCDataProducts',
           'mu2e_GeneralUtilities',
           'mu2e_ConfigTools',
           G4LIBS,
           'CLHEP',
           OPENGL_LIBS,
           XERCESC_LIBS,
           ]

mainlib = helper.make_mainlib ( mylibs,
                                [  G4CPPFLAGS, G4OGL_CPPFLAGS ],
                                [ '-L'+g4libdir, '-I'+g4inc, '-I'+g4futureinc ]
                                )

helper.make_plugins( [ mainlib, mylibs, 'Tree' ],
                     [],
                     [ G4CPPFLAGS, G4OGL_CPPFLAGS ],
                     [ '-L'+g4libdir, '-I'+g4inc ]
                     )

# This tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
