#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

#include "MuCapG4/test/generatorDefs.fcl"
#include "MuCapG4/test/detectorDefs.fcl"

# Give this job a name.
process_name : mucap

# Start form an empty source
source : {
    module_type : EmptyEvent
    maxEvents : 10
}

services : {

    message               : @local::default_message
    TFileService          : { fileName : nil }
    RandomNumberGenerator : { }

    user : {
        GeometryService        : { inputFile      : "MuCapG4/test/geom_mucap.txt"  }
        ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
        GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
        G4Helper               : { }
        SeedService            : @local::automaticSeeds

        Geometry : @local::mucapGeometry
    }
}

physics : {

    producers:  {

        generate: @local::muCapVtxGenerator

        g4run: {
            module_type          : MuCapG4
            //diagLevel            : 2
            //trackingVerbosityLevel : 2
            //simHitsSizeLimit : 0

            generatorModuleLabel : generate

            materials: @local::mucapMaterials

            SDConfig : { enableSD : [] }

//            visMacro             : "MuCapG4/test/vis_mucap.mac"
        }

        randomsaver          : @local::randomsaver

    }

    analyzers : {
        mcparticles : {
            module_type : MuCapSimParticleHist
            inputModuleLabel : "g4run"
            inputInstanceName : ""
        }
        mchits : {
            module_type : MuCapSimHitsHist
            hitsModuleLabel : "g4run"
            hitsInstanceName : "MuCapSimHits"
            particlesModuleLabel : "g4run"

            numEnergyBins : 1000
            ekMin : 0
            ekMax : 100
        }
    }

    p1 : [generate, g4run]
    e1 : [outfile, mcparticles, mchits]

    trigger_paths  : [p1]
    end_paths      : [e1]

}

outputs:  {

    outfile : {
        module_type   :   RootOutput
        fileName      :   nil
    }

}

//----------------------------------------------------------------
// Limit the amount of "Begin processing the ... record" messages
services.message.destinations.log.categories.ArtReport.reportEvery : 1
services.message.destinations.log.categories.ArtReport.limit : 1
services.message.destinations.log.categories.ArtReport.timespan : 60

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.user.SeedService.baseSeed         :  0
services.user.SeedService.maxUniqueEngines :  20

// This tells emacs to view this file in the JavaScript mode.
// Local Variables:
// mode:js
// End:
